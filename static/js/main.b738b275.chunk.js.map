{"version":3,"sources":["components/Form.js","components/Note.js","components/NoteList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","noteName","setNoteName","notes","setNotes","noteText","setStatus","setNoteText","noteClass","setNoteClass","className","value","onChange","e","console","log","target","type","placeHolder","name","defaultValue","onClick","preventDefault","text","class","id","Date","now","toString","Math","random","substr","dateCreated","Note","props","note","filter","el","NoteList","filteredNotes","map","App","useState","status","setFilteredNotes","useEffect","getLocalNotes","filterHandler","saveLocalNotes","localStorage","setItem","JSON","stringify","getItem","noteLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b738b275.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({noteName, setNoteName, notes, setNotes, setStatus, noteText , setNoteText, noteClass, setNoteClass}) =>{\r\n\r\n     function uid() {\r\n        const head = Date.now().toString(36);\r\n        const tail = Math.random().toString(36).substr(2);\r\n        return head + tail;\r\n      }\r\n\r\n      const diceIcon = '<i className=\"fas fa-dice-d20\"/>';\r\n      const userIcon = '<i className=\"fas fa-user\"/>';\r\n      const mapIcon = '<i className=\"fas fa-map\"/>';\r\n      const itemIcon = '<i className=\"fas fa-book\"/>';\r\n      const eventIcon = '<i className=\"fas fa-calendar-days\"/>';\r\n\r\n\r\n    const noteNameHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setNoteName(e.target.value);\r\n    };\r\n\r\n    const noteTextHandler = (e) => {\r\n        setNoteText(e.target.value);\r\n    }\r\n\r\n    const submitNoteHandler = (e) =>{\r\n        e.preventDefault();\r\n        setNotes([\r\n            ...notes, {name: noteName, text: noteText, class: noteClass, id: uid(), dateCreated: new Date()}\r\n        ]);\r\n        console.log(e.target);\r\n        setNoteName('');\r\n        setNoteText('');\r\n        setNoteClass('person');\r\n    };\r\n\r\n    let noteClassHandler = e => {\r\n        setNoteClass(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form className=\"note-form\">\r\n\r\n            <input value={noteName} onChange={noteNameHandler} type=\"text\" className=\"note-name\" placeHolder=\"Name\"/>\r\n\r\n            <div className=\"select\">\r\n                <select value={noteClass} onChange={noteClassHandler} name=\"todos\" className=\"filter-notes\" defaultValue={\"person\"}>\r\n                    <option value=\"person\">Person</option>\r\n                    <option value=\"place\">Place</option>\r\n                    <option value=\"item\">Item</option>\r\n                    <option value=\"event\">Event</option>\r\n                </select>\r\n            </div>\r\n            <textarea value={noteText} onChange={noteTextHandler} type='text' className=\"note-text\"/>\r\n            <button onClick={submitNoteHandler} className=\"note-button\" type=\"submit\">\r\n                Add Note <i className=\"fas fa-plus-square\"/>\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Note = (props,{note, notes, setNotes}) => {\r\n\r\n    const deleteHandler = ()=>{\r\n        props.setNotes(props.notes.filter((el) => el.id !== props.note.id))\r\n    }\r\n\r\n    const completeHandler = ()=>{\r\n        setNotes(notes.map((note) => {\r\n            if(note.id === note.id){\r\n                return {\r\n                    ...note, completed: !note.completed\r\n                }\r\n            }\r\n            return note;\r\n        }))\r\n    }\r\n    \r\n    return(\r\n        // <div className=\"todo\">\r\n            \r\n        //     <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n        //     <button onClick={completeHandler} className=\"complete-btn\">\r\n        //         <i className=\"fas fa-check\"/>\r\n        //     </button>\r\n        //     <button onClick={deleteHandler}className=\"trash-btn\">\r\n        //         <i className=\"fas fa-trash\"/>\r\n        //     </button>\r\n        // </div>\r\n\r\n        <div className=\"note\" id={props.note.id}>\r\n            <i className=\"fas fa-calendar-days\"></i>\r\n            <p>\r\n                <span>{props.note.name}</span>\r\n            </p>\r\n            <p>{props.note.text}</p>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\" />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\n\r\nconst NoteList =  ({notes, setNotes, filteredNotes, setStatus}) => {\r\n\r\n    const statusHandler =(e)=>{\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n    const testNote = {\r\n        id: \"kwjiaqfna3f4ccxq5pp\",\r\n        name: \"Big Sword\",\r\n        pic: \"\",\r\n        cla: \"item\",\r\n        text: \"Found this in a dungeon.\"\r\n      };\r\n    \r\n      const testNote2 = {\r\n        id: \"kwjiloj4tjitdnyju3p\",\r\n        name: \"Big Shield\",\r\n        pic: \"\",\r\n        cla: \"item\",\r\n        text: \"Found this in a dungeon as well.\"\r\n      };\r\n    \r\n      let sampleNoteList = [testNote, testNote2];\r\n    \r\n\r\n    return(\r\n        <div className=\"note-container\">\r\n            <div className=\"note-filter\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-notes\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"person\">Person</option>\r\n                    <option value=\"place\">Place</option>\r\n                    <option value=\"item\">Item</option>\r\n                    <option value=\"event\">Event</option>\r\n                </select>\r\n            </div>\r\n            <ul className=\"note-list\">\r\n                 {filteredNotes.map((note) => (\r\n                    <Note\r\n                        setNotes={setNotes} \r\n                        notes={notes}\r\n                        note={note}\r\n                    />\r\n                    ))\r\n                }   \r\n\r\n                    {/* {sampleNoteList.map((note) =>(\r\n                        <Note note={note}/>\r\n                    ))} */}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoteList","import React, { useState, useEffect } from 'react';\nimport './App.css';\n//Importing Components\nimport Form from './components/Form';\nimport NoteList from './components/NoteList';\n\n\nfunction App() {\n  const [noteName , setNoteName] = useState('');\n  const [noteText, setNoteText] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredNotes, setFilteredNotes] = useState([]);\n  const [noteClass, setNoteClass] = useState('person');\n  \n\n  useEffect(() =>{\n    getLocalNotes();\n  }, []);\n\n  useEffect(() =>{\n    filterHandler();\n    saveLocalNotes();\n  },[notes, status]);\n\n  const filterHandler = ()=>{\n    switch(status){\n      case 'person':\n        setFilteredNotes(notes.filter((note) => note.class === 'person'));\n        break;\n      case 'place':\n        setFilteredNotes(notes.filter((note) => note.class === 'place'));\n        break;\n      case 'item':\n        setFilteredNotes(notes.filter((note) => note.class === 'item'));\n        break;\n      case 'event':\n        setFilteredNotes(notes.filter((note) => note.class === 'event'));\n        break;\n      default:\n        setFilteredNotes(notes);\n        break;\n    }\n  }\n\n  const saveLocalNotes = () =>{\n      localStorage.setItem('notes', JSON.stringify(notes));\n  };\n\n  const getLocalNotes =() =>{\n    if(localStorage.getItem('notes') ===null){\n      localStorage.setItem('notes', JSON.stringify([]));\n    }else{\n      let noteLocal = JSON.parse(localStorage.getItem(\"notes\"));\n      setNotes(noteLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1><i className=\"fas fa-dice-d20\"/> Notes App</h1>\n      </header>\n      <Form \n        notes={notes} \n        setNotes={setNotes} \n        setNoteName={setNoteName}\n        noteName={noteName}\n        setStatus={setStatus}\n        noteText={noteText}\n        setNoteText={setNoteText}\n        noteClass={noteClass}\n        setNoteClass={setNoteClass}\n        />\n      <NoteList setNotes={setNotes} notes={notes} filteredNotes={filteredNotes} setStatus={setStatus}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}